import { RDSServiceException as __BaseException } from "./RDSServiceException";
export var TargetRole;
(function (TargetRole) {
    TargetRole["READ_ONLY"] = "READ_ONLY";
    TargetRole["READ_WRITE"] = "READ_WRITE";
    TargetRole["UNKNOWN"] = "UNKNOWN";
})(TargetRole || (TargetRole = {}));
export var TargetHealthReason;
(function (TargetHealthReason) {
    TargetHealthReason["AUTH_FAILURE"] = "AUTH_FAILURE";
    TargetHealthReason["CONNECTION_FAILED"] = "CONNECTION_FAILED";
    TargetHealthReason["INVALID_REPLICATION_STATE"] = "INVALID_REPLICATION_STATE";
    TargetHealthReason["PENDING_PROXY_CAPACITY"] = "PENDING_PROXY_CAPACITY";
    TargetHealthReason["UNREACHABLE"] = "UNREACHABLE";
})(TargetHealthReason || (TargetHealthReason = {}));
export var TargetState;
(function (TargetState) {
    TargetState["available"] = "AVAILABLE";
    TargetState["registering"] = "REGISTERING";
    TargetState["unavailable"] = "UNAVAILABLE";
})(TargetState || (TargetState = {}));
export var TargetType;
(function (TargetType) {
    TargetType["RDS_INSTANCE"] = "RDS_INSTANCE";
    TargetType["RDS_SERVERLESS_ENDPOINT"] = "RDS_SERVERLESS_ENDPOINT";
    TargetType["TRACKED_CLUSTER"] = "TRACKED_CLUSTER";
})(TargetType || (TargetType = {}));
export var SourceType;
(function (SourceType) {
    SourceType["blue_green_deployment"] = "blue-green-deployment";
    SourceType["custom_engine_version"] = "custom-engine-version";
    SourceType["db_cluster"] = "db-cluster";
    SourceType["db_cluster_snapshot"] = "db-cluster-snapshot";
    SourceType["db_instance"] = "db-instance";
    SourceType["db_parameter_group"] = "db-parameter-group";
    SourceType["db_proxy"] = "db-proxy";
    SourceType["db_security_group"] = "db-security-group";
    SourceType["db_snapshot"] = "db-snapshot";
})(SourceType || (SourceType = {}));
export class ReservedDBInstanceNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedDBInstanceNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedDBInstanceNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedDBInstanceNotFoundFault.prototype);
    }
}
export class ReservedDBInstancesOfferingNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedDBInstancesOfferingNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedDBInstancesOfferingNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedDBInstancesOfferingNotFoundFault.prototype);
    }
}
export class DBLogFileNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBLogFileNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBLogFileNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBLogFileNotFoundFault.prototype);
    }
}
export var AuditPolicyState;
(function (AuditPolicyState) {
    AuditPolicyState["LOCKED_POLICY"] = "locked";
    AuditPolicyState["UNLOCKED_POLICY"] = "unlocked";
})(AuditPolicyState || (AuditPolicyState = {}));
export class InvalidDBClusterCapacityFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidDBClusterCapacityFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBClusterCapacityFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBClusterCapacityFault.prototype);
    }
}
export var CustomEngineVersionStatus;
(function (CustomEngineVersionStatus) {
    CustomEngineVersionStatus["available"] = "available";
    CustomEngineVersionStatus["inactive"] = "inactive";
    CustomEngineVersionStatus["inactive_except_restore"] = "inactive-except-restore";
})(CustomEngineVersionStatus || (CustomEngineVersionStatus = {}));
export class SharedSnapshotQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SharedSnapshotQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SharedSnapshotQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SharedSnapshotQuotaExceededFault.prototype);
    }
}
export class DBUpgradeDependencyFailureFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBUpgradeDependencyFailureFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBUpgradeDependencyFailureFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBUpgradeDependencyFailureFault.prototype);
    }
}
export class SubnetAlreadyInUse extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetAlreadyInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetAlreadyInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetAlreadyInUse.prototype);
    }
}
export class ReservedDBInstanceAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedDBInstanceAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedDBInstanceAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedDBInstanceAlreadyExistsFault.prototype);
    }
}
export class ReservedDBInstanceQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedDBInstanceQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedDBInstanceQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedDBInstanceQuotaExceededFault.prototype);
    }
}
export class DBProxyTargetAlreadyRegisteredFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBProxyTargetAlreadyRegisteredFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBProxyTargetAlreadyRegisteredFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBProxyTargetAlreadyRegisteredFault.prototype);
    }
}
export class InsufficientAvailableIPsInSubnetFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InsufficientAvailableIPsInSubnetFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientAvailableIPsInSubnetFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientAvailableIPsInSubnetFault.prototype);
    }
}
export class DBClusterRoleNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBClusterRoleNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterRoleNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterRoleNotFoundFault.prototype);
    }
}
export class DBInstanceRoleNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBInstanceRoleNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBInstanceRoleNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBInstanceRoleNotFoundFault.prototype);
    }
}
export class InvalidS3BucketFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidS3BucketFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidS3BucketFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidS3BucketFault.prototype);
    }
}
export class InsufficientDBClusterCapacityFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InsufficientDBClusterCapacityFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientDBClusterCapacityFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientDBClusterCapacityFault.prototype);
    }
}
export class InvalidRestoreFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRestoreFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRestoreFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRestoreFault.prototype);
    }
}
export class PointInTimeRestoreNotEnabledFault extends __BaseException {
    constructor(opts) {
        super({
            name: "PointInTimeRestoreNotEnabledFault",
            $fault: "client",
            ...opts,
        });
        this.name = "PointInTimeRestoreNotEnabledFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, PointInTimeRestoreNotEnabledFault.prototype);
    }
}
export class ExportTaskAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ExportTaskAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ExportTaskAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExportTaskAlreadyExistsFault.prototype);
    }
}
export class IamRoleMissingPermissionsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "IamRoleMissingPermissionsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "IamRoleMissingPermissionsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, IamRoleMissingPermissionsFault.prototype);
    }
}
export class IamRoleNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "IamRoleNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "IamRoleNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, IamRoleNotFoundFault.prototype);
    }
}
export class InvalidExportOnlyFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidExportOnlyFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidExportOnlyFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidExportOnlyFault.prototype);
    }
}
export class InvalidExportSourceStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidExportSourceStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidExportSourceStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidExportSourceStateFault.prototype);
    }
}
export const DescribeDBProxyEndpointsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeDBProxyEndpointsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeDBProxyTargetGroupsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ConnectionPoolConfigurationInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DBProxyTargetGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeDBProxyTargetGroupsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeDBProxyTargetsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TargetHealthFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DBProxyTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeDBProxyTargetsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DBSecurityGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeDBSecurityGroupsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeDBSnapshotAttributesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DBSnapshotAttributeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DBSnapshotAttributesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeDBSnapshotAttributesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DBSnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeDBSnapshotsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DBSubnetGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeDBSubnetGroupsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeEngineDefaultClusterParametersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EngineDefaultsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeEngineDefaultClusterParametersResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeEngineDefaultParametersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeEngineDefaultParametersResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeEventCategoriesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EventCategoriesMapFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EventCategoriesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeEventsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EventFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EventsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeEventSubscriptionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EventSubscriptionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeExportTasksMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExportTasksMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeGlobalClustersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GlobalClustersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeOptionGroupOptionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MinimumEngineVersionPerAllowedValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OptionGroupOptionSettingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OptionVersionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OptionGroupOptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OptionGroupOptionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeOptionGroupsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OptionGroupsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeOrderableDBInstanceOptionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AvailableProcessorFeatureFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OrderableDBInstanceOptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OrderableDBInstanceOptionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribePendingMaintenanceActionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PendingMaintenanceActionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeReservedDBInstancesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RecurringChargeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReservedDBInstanceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReservedDBInstanceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeReservedDBInstancesOfferingsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReservedDBInstancesOfferingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReservedDBInstancesOfferingMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeSourceRegionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SourceRegionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SourceRegionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeValidDBInstanceModificationsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DoubleRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ValidStorageOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ValidDBInstanceModificationsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeValidDBInstanceModificationsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DownloadDBLogFilePortionDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DownloadDBLogFilePortionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FailoverDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FailoverDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FailoverGlobalClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FailoverGlobalClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTagsForResourceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagListMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyActivityStreamRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyActivityStreamResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyCertificatesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyCertificatesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DBClusterCapacityInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyCurrentDBClusterCapacityMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyCustomDBEngineVersionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CloudwatchLogsExportConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBClusterEndpointMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DBClusterParameterGroupNameMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBClusterParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBClusterSnapshotAttributeMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBClusterSnapshotAttributeResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBInstanceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DBParameterGroupNameMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBProxyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBProxyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBProxyEndpointRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBProxyEndpointResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ConnectionPoolConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBProxyTargetGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBProxyTargetGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBSnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBSnapshotAttributeMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBSnapshotAttributeResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBSubnetGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyDBSubnetGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyEventSubscriptionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyEventSubscriptionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyGlobalClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyGlobalClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OptionConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyOptionGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModifyOptionGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PromoteReadReplicaMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PromoteReadReplicaResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PromoteReadReplicaDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PromoteReadReplicaDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PurchaseReservedDBInstancesOfferingMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PurchaseReservedDBInstancesOfferingResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RebootDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RebootDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RebootDBInstanceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RebootDBInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterDBProxyTargetsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterDBProxyTargetsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RemoveFromGlobalClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RemoveFromGlobalClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RemoveRoleFromDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RemoveRoleFromDBInstanceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RemoveSourceIdentifierFromSubscriptionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RemoveSourceIdentifierFromSubscriptionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RemoveTagsFromResourceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResetDBClusterParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResetDBParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RestoreDBClusterFromS3MessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RestoreDBClusterFromS3ResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RestoreDBClusterFromSnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RestoreDBClusterFromSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RestoreDBClusterToPointInTimeMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RestoreDBClusterToPointInTimeResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RestoreDBInstanceFromDBSnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RestoreDBInstanceFromDBSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RestoreDBInstanceFromS3MessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RestoreDBInstanceFromS3ResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RestoreDBInstanceToPointInTimeMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RestoreDBInstanceToPointInTimeResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RevokeDBSecurityGroupIngressMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RevokeDBSecurityGroupIngressResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartActivityStreamRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartActivityStreamResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartDBInstanceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartDBInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartDBInstanceAutomatedBackupsReplicationMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartDBInstanceAutomatedBackupsReplicationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartExportTaskMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopActivityStreamRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopActivityStreamResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopDBInstanceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopDBInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopDBInstanceAutomatedBackupsReplicationMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopDBInstanceAutomatedBackupsReplicationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SwitchoverBlueGreenDeploymentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SwitchoverBlueGreenDeploymentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SwitchoverReadReplicaMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SwitchoverReadReplicaResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
