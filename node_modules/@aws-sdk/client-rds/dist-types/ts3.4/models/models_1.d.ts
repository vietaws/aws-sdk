import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import {
  ActivityStreamMode,
  ActivityStreamPolicyStatus,
  ActivityStreamStatus,
  AutomationMode,
  AvailabilityZone,
  BlueGreenDeployment,
  Certificate,
  DBCluster,
  DBClusterSnapshotAttributesResult,
  DBInstance,
  DBInstanceAutomatedBackup,
  DBProxy,
  DBProxyEndpoint,
  DBSecurityGroup,
  DBSnapshot,
  DBSubnetGroup,
  EventSubscription,
  ExportSourceType,
  ExportTask,
  Filter,
  GlobalCluster,
  OptionGroup,
  OptionSetting,
  Parameter,
  ProcessorFeature,
  ReplicaMode,
  ResourcePendingMaintenanceActions,
  ScalingConfiguration,
  ServerlessV2ScalingConfiguration,
  Tag,
  UserAuthConfig,
} from "./models_0";
import { RDSServiceException as __BaseException } from "./RDSServiceException";
export interface DescribeDBProxyEndpointsRequest {
  DBProxyName?: string;
  DBProxyEndpointName?: string;
  Filters?: Filter[];
  Marker?: string;
  MaxRecords?: number;
}
export interface DescribeDBProxyEndpointsResponse {
  DBProxyEndpoints?: DBProxyEndpoint[];
  Marker?: string;
}
export interface DescribeDBProxyTargetGroupsRequest {
  DBProxyName: string | undefined;
  TargetGroupName?: string;
  Filters?: Filter[];
  Marker?: string;
  MaxRecords?: number;
}
export interface ConnectionPoolConfigurationInfo {
  MaxConnectionsPercent?: number;
  MaxIdleConnectionsPercent?: number;
  ConnectionBorrowTimeout?: number;
  SessionPinningFilters?: string[];
  InitQuery?: string;
}
export interface DBProxyTargetGroup {
  DBProxyName?: string;
  TargetGroupName?: string;
  TargetGroupArn?: string;
  IsDefault?: boolean;
  Status?: string;
  ConnectionPoolConfig?: ConnectionPoolConfigurationInfo;
  CreatedDate?: Date;
  UpdatedDate?: Date;
}
export interface DescribeDBProxyTargetGroupsResponse {
  TargetGroups?: DBProxyTargetGroup[];
  Marker?: string;
}
export interface DescribeDBProxyTargetsRequest {
  DBProxyName: string | undefined;
  TargetGroupName?: string;
  Filters?: Filter[];
  Marker?: string;
  MaxRecords?: number;
}
export declare enum TargetRole {
  READ_ONLY = "READ_ONLY",
  READ_WRITE = "READ_WRITE",
  UNKNOWN = "UNKNOWN",
}
export declare enum TargetHealthReason {
  AUTH_FAILURE = "AUTH_FAILURE",
  CONNECTION_FAILED = "CONNECTION_FAILED",
  INVALID_REPLICATION_STATE = "INVALID_REPLICATION_STATE",
  PENDING_PROXY_CAPACITY = "PENDING_PROXY_CAPACITY",
  UNREACHABLE = "UNREACHABLE",
}
export declare enum TargetState {
  available = "AVAILABLE",
  registering = "REGISTERING",
  unavailable = "UNAVAILABLE",
}
export interface TargetHealth {
  State?: TargetState | string;
  Reason?: TargetHealthReason | string;
  Description?: string;
}
export declare enum TargetType {
  RDS_INSTANCE = "RDS_INSTANCE",
  RDS_SERVERLESS_ENDPOINT = "RDS_SERVERLESS_ENDPOINT",
  TRACKED_CLUSTER = "TRACKED_CLUSTER",
}
export interface DBProxyTarget {
  TargetArn?: string;
  Endpoint?: string;
  TrackedClusterId?: string;
  RdsResourceId?: string;
  Port?: number;
  Type?: TargetType | string;
  Role?: TargetRole | string;
  TargetHealth?: TargetHealth;
}
export interface DescribeDBProxyTargetsResponse {
  Targets?: DBProxyTarget[];
  Marker?: string;
}
export interface DBSecurityGroupMessage {
  Marker?: string;
  DBSecurityGroups?: DBSecurityGroup[];
}
export interface DescribeDBSecurityGroupsMessage {
  DBSecurityGroupName?: string;
  Filters?: Filter[];
  MaxRecords?: number;
  Marker?: string;
}
export interface DescribeDBSnapshotAttributesMessage {
  DBSnapshotIdentifier: string | undefined;
}
export interface DBSnapshotAttribute {
  AttributeName?: string;
  AttributeValues?: string[];
}
export interface DBSnapshotAttributesResult {
  DBSnapshotIdentifier?: string;
  DBSnapshotAttributes?: DBSnapshotAttribute[];
}
export interface DescribeDBSnapshotAttributesResult {
  DBSnapshotAttributesResult?: DBSnapshotAttributesResult;
}
export interface DBSnapshotMessage {
  Marker?: string;
  DBSnapshots?: DBSnapshot[];
}
export interface DescribeDBSnapshotsMessage {
  DBInstanceIdentifier?: string;
  DBSnapshotIdentifier?: string;
  SnapshotType?: string;
  Filters?: Filter[];
  MaxRecords?: number;
  Marker?: string;
  IncludeShared?: boolean;
  IncludePublic?: boolean;
  DbiResourceId?: string;
}
export interface DBSubnetGroupMessage {
  Marker?: string;
  DBSubnetGroups?: DBSubnetGroup[];
}
export interface DescribeDBSubnetGroupsMessage {
  DBSubnetGroupName?: string;
  Filters?: Filter[];
  MaxRecords?: number;
  Marker?: string;
}
export interface DescribeEngineDefaultClusterParametersMessage {
  DBParameterGroupFamily: string | undefined;
  Filters?: Filter[];
  MaxRecords?: number;
  Marker?: string;
}
export interface EngineDefaults {
  DBParameterGroupFamily?: string;
  Marker?: string;
  Parameters?: Parameter[];
}
export interface DescribeEngineDefaultClusterParametersResult {
  EngineDefaults?: EngineDefaults;
}
export interface DescribeEngineDefaultParametersMessage {
  DBParameterGroupFamily: string | undefined;
  Filters?: Filter[];
  MaxRecords?: number;
  Marker?: string;
}
export interface DescribeEngineDefaultParametersResult {
  EngineDefaults?: EngineDefaults;
}
export interface DescribeEventCategoriesMessage {
  SourceType?: string;
  Filters?: Filter[];
}
export interface EventCategoriesMap {
  SourceType?: string;
  EventCategories?: string[];
}
export interface EventCategoriesMessage {
  EventCategoriesMapList?: EventCategoriesMap[];
}
export declare enum SourceType {
  blue_green_deployment = "blue-green-deployment",
  custom_engine_version = "custom-engine-version",
  db_cluster = "db-cluster",
  db_cluster_snapshot = "db-cluster-snapshot",
  db_instance = "db-instance",
  db_parameter_group = "db-parameter-group",
  db_proxy = "db-proxy",
  db_security_group = "db-security-group",
  db_snapshot = "db-snapshot",
}
export interface DescribeEventsMessage {
  SourceIdentifier?: string;
  SourceType?: SourceType | string;
  StartTime?: Date;
  EndTime?: Date;
  Duration?: number;
  EventCategories?: string[];
  Filters?: Filter[];
  MaxRecords?: number;
  Marker?: string;
}
export interface Event {
  SourceIdentifier?: string;
  SourceType?: SourceType | string;
  Message?: string;
  EventCategories?: string[];
  Date?: Date;
  SourceArn?: string;
}
export interface EventsMessage {
  Marker?: string;
  Events?: Event[];
}
export interface DescribeEventSubscriptionsMessage {
  SubscriptionName?: string;
  Filters?: Filter[];
  MaxRecords?: number;
  Marker?: string;
}
export interface EventSubscriptionsMessage {
  Marker?: string;
  EventSubscriptionsList?: EventSubscription[];
}
export interface DescribeExportTasksMessage {
  ExportTaskIdentifier?: string;
  SourceArn?: string;
  Filters?: Filter[];
  Marker?: string;
  MaxRecords?: number;
  SourceType?: ExportSourceType | string;
}
export interface ExportTasksMessage {
  Marker?: string;
  ExportTasks?: ExportTask[];
}
export interface DescribeGlobalClustersMessage {
  GlobalClusterIdentifier?: string;
  Filters?: Filter[];
  MaxRecords?: number;
  Marker?: string;
}
export interface GlobalClustersMessage {
  Marker?: string;
  GlobalClusters?: GlobalCluster[];
}
export interface DescribeOptionGroupOptionsMessage {
  EngineName: string | undefined;
  MajorEngineVersion?: string;
  Filters?: Filter[];
  MaxRecords?: number;
  Marker?: string;
}
export interface MinimumEngineVersionPerAllowedValue {
  AllowedValue?: string;
  MinimumEngineVersion?: string;
}
export interface OptionGroupOptionSetting {
  SettingName?: string;
  SettingDescription?: string;
  DefaultValue?: string;
  ApplyType?: string;
  AllowedValues?: string;
  IsModifiable?: boolean;
  IsRequired?: boolean;
  MinimumEngineVersionPerAllowedValue?: MinimumEngineVersionPerAllowedValue[];
}
export interface OptionVersion {
  Version?: string;
  IsDefault?: boolean;
}
export interface OptionGroupOption {
  Name?: string;
  Description?: string;
  EngineName?: string;
  MajorEngineVersion?: string;
  MinimumRequiredMinorEngineVersion?: string;
  PortRequired?: boolean;
  DefaultPort?: number;
  OptionsDependedOn?: string[];
  OptionsConflictsWith?: string[];
  Persistent?: boolean;
  Permanent?: boolean;
  RequiresAutoMinorEngineVersionUpgrade?: boolean;
  VpcOnly?: boolean;
  SupportsOptionVersionDowngrade?: boolean;
  OptionGroupOptionSettings?: OptionGroupOptionSetting[];
  OptionGroupOptionVersions?: OptionVersion[];
  CopyableCrossAccount?: boolean;
}
export interface OptionGroupOptionsMessage {
  OptionGroupOptions?: OptionGroupOption[];
  Marker?: string;
}
export interface DescribeOptionGroupsMessage {
  OptionGroupName?: string;
  Filters?: Filter[];
  Marker?: string;
  MaxRecords?: number;
  EngineName?: string;
  MajorEngineVersion?: string;
}
export interface OptionGroups {
  OptionGroupsList?: OptionGroup[];
  Marker?: string;
}
export interface DescribeOrderableDBInstanceOptionsMessage {
  Engine: string | undefined;
  EngineVersion?: string;
  DBInstanceClass?: string;
  LicenseModel?: string;
  AvailabilityZoneGroup?: string;
  Vpc?: boolean;
  Filters?: Filter[];
  MaxRecords?: number;
  Marker?: string;
}
export interface AvailableProcessorFeature {
  Name?: string;
  DefaultValue?: string;
  AllowedValues?: string;
}
export interface OrderableDBInstanceOption {
  Engine?: string;
  EngineVersion?: string;
  DBInstanceClass?: string;
  LicenseModel?: string;
  AvailabilityZoneGroup?: string;
  AvailabilityZones?: AvailabilityZone[];
  MultiAZCapable?: boolean;
  ReadReplicaCapable?: boolean;
  Vpc?: boolean;
  SupportsStorageEncryption?: boolean;
  StorageType?: string;
  SupportsIops?: boolean;
  SupportsEnhancedMonitoring?: boolean;
  SupportsIAMDatabaseAuthentication?: boolean;
  SupportsPerformanceInsights?: boolean;
  MinStorageSize?: number;
  MaxStorageSize?: number;
  MinIopsPerDbInstance?: number;
  MaxIopsPerDbInstance?: number;
  MinIopsPerGib?: number;
  MaxIopsPerGib?: number;
  AvailableProcessorFeatures?: AvailableProcessorFeature[];
  SupportedEngineModes?: string[];
  SupportsStorageAutoscaling?: boolean;
  SupportsKerberosAuthentication?: boolean;
  OutpostCapable?: boolean;
  SupportedActivityStreamModes?: string[];
  SupportsGlobalDatabases?: boolean;
  SupportsClusters?: boolean;
  SupportedNetworkTypes?: string[];
  SupportsStorageThroughput?: boolean;
  MinStorageThroughputPerDbInstance?: number;
  MaxStorageThroughputPerDbInstance?: number;
  MinStorageThroughputPerIops?: number;
  MaxStorageThroughputPerIops?: number;
}
export interface OrderableDBInstanceOptionsMessage {
  OrderableDBInstanceOptions?: OrderableDBInstanceOption[];
  Marker?: string;
}
export interface DescribePendingMaintenanceActionsMessage {
  ResourceIdentifier?: string;
  Filters?: Filter[];
  Marker?: string;
  MaxRecords?: number;
}
export interface PendingMaintenanceActionsMessage {
  PendingMaintenanceActions?: ResourcePendingMaintenanceActions[];
  Marker?: string;
}
export interface DescribeReservedDBInstancesMessage {
  ReservedDBInstanceId?: string;
  ReservedDBInstancesOfferingId?: string;
  DBInstanceClass?: string;
  Duration?: string;
  ProductDescription?: string;
  OfferingType?: string;
  MultiAZ?: boolean;
  LeaseId?: string;
  Filters?: Filter[];
  MaxRecords?: number;
  Marker?: string;
}
export interface RecurringCharge {
  RecurringChargeAmount?: number;
  RecurringChargeFrequency?: string;
}
export interface ReservedDBInstance {
  ReservedDBInstanceId?: string;
  ReservedDBInstancesOfferingId?: string;
  DBInstanceClass?: string;
  StartTime?: Date;
  Duration?: number;
  FixedPrice?: number;
  UsagePrice?: number;
  CurrencyCode?: string;
  DBInstanceCount?: number;
  ProductDescription?: string;
  OfferingType?: string;
  MultiAZ?: boolean;
  State?: string;
  RecurringCharges?: RecurringCharge[];
  ReservedDBInstanceArn?: string;
  LeaseId?: string;
}
export interface ReservedDBInstanceMessage {
  Marker?: string;
  ReservedDBInstances?: ReservedDBInstance[];
}
export declare class ReservedDBInstanceNotFoundFault extends __BaseException {
  readonly name: "ReservedDBInstanceNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ReservedDBInstanceNotFoundFault,
      __BaseException
    >
  );
}
export interface DescribeReservedDBInstancesOfferingsMessage {
  ReservedDBInstancesOfferingId?: string;
  DBInstanceClass?: string;
  Duration?: string;
  ProductDescription?: string;
  OfferingType?: string;
  MultiAZ?: boolean;
  Filters?: Filter[];
  MaxRecords?: number;
  Marker?: string;
}
export interface ReservedDBInstancesOffering {
  ReservedDBInstancesOfferingId?: string;
  DBInstanceClass?: string;
  Duration?: number;
  FixedPrice?: number;
  UsagePrice?: number;
  CurrencyCode?: string;
  ProductDescription?: string;
  OfferingType?: string;
  MultiAZ?: boolean;
  RecurringCharges?: RecurringCharge[];
}
export interface ReservedDBInstancesOfferingMessage {
  Marker?: string;
  ReservedDBInstancesOfferings?: ReservedDBInstancesOffering[];
}
export declare class ReservedDBInstancesOfferingNotFoundFault extends __BaseException {
  readonly name: "ReservedDBInstancesOfferingNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ReservedDBInstancesOfferingNotFoundFault,
      __BaseException
    >
  );
}
export interface DescribeSourceRegionsMessage {
  RegionName?: string;
  MaxRecords?: number;
  Marker?: string;
  Filters?: Filter[];
}
export interface SourceRegion {
  RegionName?: string;
  Endpoint?: string;
  Status?: string;
  SupportsDBInstanceAutomatedBackupsReplication?: boolean;
}
export interface SourceRegionMessage {
  Marker?: string;
  SourceRegions?: SourceRegion[];
}
export interface DescribeValidDBInstanceModificationsMessage {
  DBInstanceIdentifier: string | undefined;
}
export interface DoubleRange {
  From?: number;
  To?: number;
}
export interface Range {
  From?: number;
  To?: number;
  Step?: number;
}
export interface ValidStorageOptions {
  StorageType?: string;
  StorageSize?: Range[];
  ProvisionedIops?: Range[];
  IopsToStorageRatio?: DoubleRange[];
  SupportsStorageAutoscaling?: boolean;
  ProvisionedStorageThroughput?: Range[];
  StorageThroughputToIopsRatio?: DoubleRange[];
}
export interface ValidDBInstanceModificationsMessage {
  Storage?: ValidStorageOptions[];
  ValidProcessorFeatures?: AvailableProcessorFeature[];
}
export interface DescribeValidDBInstanceModificationsResult {
  ValidDBInstanceModificationsMessage?: ValidDBInstanceModificationsMessage;
}
export declare class DBLogFileNotFoundFault extends __BaseException {
  readonly name: "DBLogFileNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBLogFileNotFoundFault, __BaseException>
  );
}
export interface DownloadDBLogFilePortionDetails {
  LogFileData?: string;
  Marker?: string;
  AdditionalDataPending?: boolean;
}
export interface DownloadDBLogFilePortionMessage {
  DBInstanceIdentifier: string | undefined;
  LogFileName: string | undefined;
  Marker?: string;
  NumberOfLines?: number;
}
export interface FailoverDBClusterMessage {
  DBClusterIdentifier: string | undefined;
  TargetDBInstanceIdentifier?: string;
}
export interface FailoverDBClusterResult {
  DBCluster?: DBCluster;
}
export interface FailoverGlobalClusterMessage {
  GlobalClusterIdentifier: string | undefined;
  TargetDbClusterIdentifier: string | undefined;
}
export interface FailoverGlobalClusterResult {
  GlobalCluster?: GlobalCluster;
}
export interface ListTagsForResourceMessage {
  ResourceName: string | undefined;
  Filters?: Filter[];
}
export interface TagListMessage {
  TagList?: Tag[];
}
export declare enum AuditPolicyState {
  LOCKED_POLICY = "locked",
  UNLOCKED_POLICY = "unlocked",
}
export interface ModifyActivityStreamRequest {
  ResourceArn?: string;
  AuditPolicyState?: AuditPolicyState | string;
}
export interface ModifyActivityStreamResponse {
  KmsKeyId?: string;
  KinesisStreamName?: string;
  Status?: ActivityStreamStatus | string;
  Mode?: ActivityStreamMode | string;
  EngineNativeAuditFieldsIncluded?: boolean;
  PolicyStatus?: ActivityStreamPolicyStatus | string;
}
export interface ModifyCertificatesMessage {
  CertificateIdentifier?: string;
  RemoveCustomerOverride?: boolean;
}
export interface ModifyCertificatesResult {
  Certificate?: Certificate;
}
export interface DBClusterCapacityInfo {
  DBClusterIdentifier?: string;
  PendingCapacity?: number;
  CurrentCapacity?: number;
  SecondsBeforeTimeout?: number;
  TimeoutAction?: string;
}
export declare class InvalidDBClusterCapacityFault extends __BaseException {
  readonly name: "InvalidDBClusterCapacityFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidDBClusterCapacityFault, __BaseException>
  );
}
export interface ModifyCurrentDBClusterCapacityMessage {
  DBClusterIdentifier: string | undefined;
  Capacity?: number;
  SecondsBeforeTimeout?: number;
  TimeoutAction?: string;
}
export declare enum CustomEngineVersionStatus {
  available = "available",
  inactive = "inactive",
  inactive_except_restore = "inactive-except-restore",
}
export interface ModifyCustomDBEngineVersionMessage {
  Engine: string | undefined;
  EngineVersion: string | undefined;
  Description?: string;
  Status?: CustomEngineVersionStatus | string;
}
export interface CloudwatchLogsExportConfiguration {
  EnableLogTypes?: string[];
  DisableLogTypes?: string[];
}
export interface ModifyDBClusterMessage {
  DBClusterIdentifier: string | undefined;
  NewDBClusterIdentifier?: string;
  ApplyImmediately?: boolean;
  BackupRetentionPeriod?: number;
  DBClusterParameterGroupName?: string;
  VpcSecurityGroupIds?: string[];
  Port?: number;
  MasterUserPassword?: string;
  OptionGroupName?: string;
  PreferredBackupWindow?: string;
  PreferredMaintenanceWindow?: string;
  EnableIAMDatabaseAuthentication?: boolean;
  BacktrackWindow?: number;
  CloudwatchLogsExportConfiguration?: CloudwatchLogsExportConfiguration;
  EngineVersion?: string;
  AllowMajorVersionUpgrade?: boolean;
  DBInstanceParameterGroupName?: string;
  Domain?: string;
  DomainIAMRoleName?: string;
  ScalingConfiguration?: ScalingConfiguration;
  DeletionProtection?: boolean;
  EnableHttpEndpoint?: boolean;
  CopyTagsToSnapshot?: boolean;
  EnableGlobalWriteForwarding?: boolean;
  DBClusterInstanceClass?: string;
  AllocatedStorage?: number;
  StorageType?: string;
  Iops?: number;
  AutoMinorVersionUpgrade?: boolean;
  MonitoringInterval?: number;
  MonitoringRoleArn?: string;
  EnablePerformanceInsights?: boolean;
  PerformanceInsightsKMSKeyId?: string;
  PerformanceInsightsRetentionPeriod?: number;
  ServerlessV2ScalingConfiguration?: ServerlessV2ScalingConfiguration;
  NetworkType?: string;
  ManageMasterUserPassword?: boolean;
  RotateMasterUserPassword?: boolean;
  MasterUserSecretKmsKeyId?: string;
}
export interface ModifyDBClusterResult {
  DBCluster?: DBCluster;
}
export interface ModifyDBClusterEndpointMessage {
  DBClusterEndpointIdentifier: string | undefined;
  EndpointType?: string;
  StaticMembers?: string[];
  ExcludedMembers?: string[];
}
export interface DBClusterParameterGroupNameMessage {
  DBClusterParameterGroupName?: string;
}
export interface ModifyDBClusterParameterGroupMessage {
  DBClusterParameterGroupName: string | undefined;
  Parameters: Parameter[] | undefined;
}
export interface ModifyDBClusterSnapshotAttributeMessage {
  DBClusterSnapshotIdentifier: string | undefined;
  AttributeName: string | undefined;
  ValuesToAdd?: string[];
  ValuesToRemove?: string[];
}
export interface ModifyDBClusterSnapshotAttributeResult {
  DBClusterSnapshotAttributesResult?: DBClusterSnapshotAttributesResult;
}
export declare class SharedSnapshotQuotaExceededFault extends __BaseException {
  readonly name: "SharedSnapshotQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      SharedSnapshotQuotaExceededFault,
      __BaseException
    >
  );
}
export declare class DBUpgradeDependencyFailureFault extends __BaseException {
  readonly name: "DBUpgradeDependencyFailureFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBUpgradeDependencyFailureFault,
      __BaseException
    >
  );
}
export interface ModifyDBInstanceMessage {
  DBInstanceIdentifier: string | undefined;
  AllocatedStorage?: number;
  DBInstanceClass?: string;
  DBSubnetGroupName?: string;
  DBSecurityGroups?: string[];
  VpcSecurityGroupIds?: string[];
  ApplyImmediately?: boolean;
  MasterUserPassword?: string;
  DBParameterGroupName?: string;
  BackupRetentionPeriod?: number;
  PreferredBackupWindow?: string;
  PreferredMaintenanceWindow?: string;
  MultiAZ?: boolean;
  EngineVersion?: string;
  AllowMajorVersionUpgrade?: boolean;
  AutoMinorVersionUpgrade?: boolean;
  LicenseModel?: string;
  Iops?: number;
  OptionGroupName?: string;
  NewDBInstanceIdentifier?: string;
  StorageType?: string;
  TdeCredentialArn?: string;
  TdeCredentialPassword?: string;
  CACertificateIdentifier?: string;
  Domain?: string;
  CopyTagsToSnapshot?: boolean;
  MonitoringInterval?: number;
  DBPortNumber?: number;
  PubliclyAccessible?: boolean;
  MonitoringRoleArn?: string;
  DomainIAMRoleName?: string;
  PromotionTier?: number;
  EnableIAMDatabaseAuthentication?: boolean;
  EnablePerformanceInsights?: boolean;
  PerformanceInsightsKMSKeyId?: string;
  PerformanceInsightsRetentionPeriod?: number;
  CloudwatchLogsExportConfiguration?: CloudwatchLogsExportConfiguration;
  ProcessorFeatures?: ProcessorFeature[];
  UseDefaultProcessorFeatures?: boolean;
  DeletionProtection?: boolean;
  MaxAllocatedStorage?: number;
  CertificateRotationRestart?: boolean;
  ReplicaMode?: ReplicaMode | string;
  EnableCustomerOwnedIp?: boolean;
  AwsBackupRecoveryPointArn?: string;
  AutomationMode?: AutomationMode | string;
  ResumeFullAutomationModeMinutes?: number;
  NetworkType?: string;
  StorageThroughput?: number;
  ManageMasterUserPassword?: boolean;
  RotateMasterUserPassword?: boolean;
  MasterUserSecretKmsKeyId?: string;
}
export interface ModifyDBInstanceResult {
  DBInstance?: DBInstance;
}
export interface DBParameterGroupNameMessage {
  DBParameterGroupName?: string;
}
export interface ModifyDBParameterGroupMessage {
  DBParameterGroupName: string | undefined;
  Parameters: Parameter[] | undefined;
}
export interface ModifyDBProxyRequest {
  DBProxyName: string | undefined;
  NewDBProxyName?: string;
  Auth?: UserAuthConfig[];
  RequireTLS?: boolean;
  IdleClientTimeout?: number;
  DebugLogging?: boolean;
  RoleArn?: string;
  SecurityGroups?: string[];
}
export interface ModifyDBProxyResponse {
  DBProxy?: DBProxy;
}
export interface ModifyDBProxyEndpointRequest {
  DBProxyEndpointName: string | undefined;
  NewDBProxyEndpointName?: string;
  VpcSecurityGroupIds?: string[];
}
export interface ModifyDBProxyEndpointResponse {
  DBProxyEndpoint?: DBProxyEndpoint;
}
export interface ConnectionPoolConfiguration {
  MaxConnectionsPercent?: number;
  MaxIdleConnectionsPercent?: number;
  ConnectionBorrowTimeout?: number;
  SessionPinningFilters?: string[];
  InitQuery?: string;
}
export interface ModifyDBProxyTargetGroupRequest {
  TargetGroupName: string | undefined;
  DBProxyName: string | undefined;
  ConnectionPoolConfig?: ConnectionPoolConfiguration;
  NewName?: string;
}
export interface ModifyDBProxyTargetGroupResponse {
  DBProxyTargetGroup?: DBProxyTargetGroup;
}
export interface ModifyDBSnapshotMessage {
  DBSnapshotIdentifier: string | undefined;
  EngineVersion?: string;
  OptionGroupName?: string;
}
export interface ModifyDBSnapshotResult {
  DBSnapshot?: DBSnapshot;
}
export interface ModifyDBSnapshotAttributeMessage {
  DBSnapshotIdentifier: string | undefined;
  AttributeName: string | undefined;
  ValuesToAdd?: string[];
  ValuesToRemove?: string[];
}
export interface ModifyDBSnapshotAttributeResult {
  DBSnapshotAttributesResult?: DBSnapshotAttributesResult;
}
export interface ModifyDBSubnetGroupMessage {
  DBSubnetGroupName: string | undefined;
  DBSubnetGroupDescription?: string;
  SubnetIds: string[] | undefined;
}
export interface ModifyDBSubnetGroupResult {
  DBSubnetGroup?: DBSubnetGroup;
}
export declare class SubnetAlreadyInUse extends __BaseException {
  readonly name: "SubnetAlreadyInUse";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<SubnetAlreadyInUse, __BaseException>);
}
export interface ModifyEventSubscriptionMessage {
  SubscriptionName: string | undefined;
  SnsTopicArn?: string;
  SourceType?: string;
  EventCategories?: string[];
  Enabled?: boolean;
}
export interface ModifyEventSubscriptionResult {
  EventSubscription?: EventSubscription;
}
export interface ModifyGlobalClusterMessage {
  GlobalClusterIdentifier?: string;
  NewGlobalClusterIdentifier?: string;
  DeletionProtection?: boolean;
  EngineVersion?: string;
  AllowMajorVersionUpgrade?: boolean;
}
export interface ModifyGlobalClusterResult {
  GlobalCluster?: GlobalCluster;
}
export interface OptionConfiguration {
  OptionName: string | undefined;
  Port?: number;
  OptionVersion?: string;
  DBSecurityGroupMemberships?: string[];
  VpcSecurityGroupMemberships?: string[];
  OptionSettings?: OptionSetting[];
}
export interface ModifyOptionGroupMessage {
  OptionGroupName: string | undefined;
  OptionsToInclude?: OptionConfiguration[];
  OptionsToRemove?: string[];
  ApplyImmediately?: boolean;
}
export interface ModifyOptionGroupResult {
  OptionGroup?: OptionGroup;
}
export interface PromoteReadReplicaMessage {
  DBInstanceIdentifier: string | undefined;
  BackupRetentionPeriod?: number;
  PreferredBackupWindow?: string;
}
export interface PromoteReadReplicaResult {
  DBInstance?: DBInstance;
}
export interface PromoteReadReplicaDBClusterMessage {
  DBClusterIdentifier: string | undefined;
}
export interface PromoteReadReplicaDBClusterResult {
  DBCluster?: DBCluster;
}
export interface PurchaseReservedDBInstancesOfferingMessage {
  ReservedDBInstancesOfferingId: string | undefined;
  ReservedDBInstanceId?: string;
  DBInstanceCount?: number;
  Tags?: Tag[];
}
export interface PurchaseReservedDBInstancesOfferingResult {
  ReservedDBInstance?: ReservedDBInstance;
}
export declare class ReservedDBInstanceAlreadyExistsFault extends __BaseException {
  readonly name: "ReservedDBInstanceAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ReservedDBInstanceAlreadyExistsFault,
      __BaseException
    >
  );
}
export declare class ReservedDBInstanceQuotaExceededFault extends __BaseException {
  readonly name: "ReservedDBInstanceQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ReservedDBInstanceQuotaExceededFault,
      __BaseException
    >
  );
}
export interface RebootDBClusterMessage {
  DBClusterIdentifier: string | undefined;
}
export interface RebootDBClusterResult {
  DBCluster?: DBCluster;
}
export interface RebootDBInstanceMessage {
  DBInstanceIdentifier: string | undefined;
  ForceFailover?: boolean;
}
export interface RebootDBInstanceResult {
  DBInstance?: DBInstance;
}
export declare class DBProxyTargetAlreadyRegisteredFault extends __BaseException {
  readonly name: "DBProxyTargetAlreadyRegisteredFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBProxyTargetAlreadyRegisteredFault,
      __BaseException
    >
  );
}
export declare class InsufficientAvailableIPsInSubnetFault extends __BaseException {
  readonly name: "InsufficientAvailableIPsInSubnetFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InsufficientAvailableIPsInSubnetFault,
      __BaseException
    >
  );
}
export interface RegisterDBProxyTargetsRequest {
  DBProxyName: string | undefined;
  TargetGroupName?: string;
  DBInstanceIdentifiers?: string[];
  DBClusterIdentifiers?: string[];
}
export interface RegisterDBProxyTargetsResponse {
  DBProxyTargets?: DBProxyTarget[];
}
export interface RemoveFromGlobalClusterMessage {
  GlobalClusterIdentifier?: string;
  DbClusterIdentifier?: string;
}
export interface RemoveFromGlobalClusterResult {
  GlobalCluster?: GlobalCluster;
}
export declare class DBClusterRoleNotFoundFault extends __BaseException {
  readonly name: "DBClusterRoleNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBClusterRoleNotFoundFault, __BaseException>
  );
}
export interface RemoveRoleFromDBClusterMessage {
  DBClusterIdentifier: string | undefined;
  RoleArn: string | undefined;
  FeatureName?: string;
}
export declare class DBInstanceRoleNotFoundFault extends __BaseException {
  readonly name: "DBInstanceRoleNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBInstanceRoleNotFoundFault, __BaseException>
  );
}
export interface RemoveRoleFromDBInstanceMessage {
  DBInstanceIdentifier: string | undefined;
  RoleArn: string | undefined;
  FeatureName: string | undefined;
}
export interface RemoveSourceIdentifierFromSubscriptionMessage {
  SubscriptionName: string | undefined;
  SourceIdentifier: string | undefined;
}
export interface RemoveSourceIdentifierFromSubscriptionResult {
  EventSubscription?: EventSubscription;
}
export interface RemoveTagsFromResourceMessage {
  ResourceName: string | undefined;
  TagKeys: string[] | undefined;
}
export interface ResetDBClusterParameterGroupMessage {
  DBClusterParameterGroupName: string | undefined;
  ResetAllParameters?: boolean;
  Parameters?: Parameter[];
}
export interface ResetDBParameterGroupMessage {
  DBParameterGroupName: string | undefined;
  ResetAllParameters?: boolean;
  Parameters?: Parameter[];
}
export declare class InvalidS3BucketFault extends __BaseException {
  readonly name: "InvalidS3BucketFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidS3BucketFault, __BaseException>
  );
}
export interface RestoreDBClusterFromS3Message {
  AvailabilityZones?: string[];
  BackupRetentionPeriod?: number;
  CharacterSetName?: string;
  DatabaseName?: string;
  DBClusterIdentifier: string | undefined;
  DBClusterParameterGroupName?: string;
  VpcSecurityGroupIds?: string[];
  DBSubnetGroupName?: string;
  Engine: string | undefined;
  EngineVersion?: string;
  Port?: number;
  MasterUsername: string | undefined;
  MasterUserPassword?: string;
  OptionGroupName?: string;
  PreferredBackupWindow?: string;
  PreferredMaintenanceWindow?: string;
  Tags?: Tag[];
  StorageEncrypted?: boolean;
  KmsKeyId?: string;
  EnableIAMDatabaseAuthentication?: boolean;
  SourceEngine: string | undefined;
  SourceEngineVersion: string | undefined;
  S3BucketName: string | undefined;
  S3Prefix?: string;
  S3IngestionRoleArn: string | undefined;
  BacktrackWindow?: number;
  EnableCloudwatchLogsExports?: string[];
  DeletionProtection?: boolean;
  CopyTagsToSnapshot?: boolean;
  Domain?: string;
  DomainIAMRoleName?: string;
  ServerlessV2ScalingConfiguration?: ServerlessV2ScalingConfiguration;
  NetworkType?: string;
  ManageMasterUserPassword?: boolean;
  MasterUserSecretKmsKeyId?: string;
}
export interface RestoreDBClusterFromS3Result {
  DBCluster?: DBCluster;
}
export declare class InsufficientDBClusterCapacityFault extends __BaseException {
  readonly name: "InsufficientDBClusterCapacityFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InsufficientDBClusterCapacityFault,
      __BaseException
    >
  );
}
export declare class InvalidRestoreFault extends __BaseException {
  readonly name: "InvalidRestoreFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRestoreFault, __BaseException>
  );
}
export interface RestoreDBClusterFromSnapshotMessage {
  AvailabilityZones?: string[];
  DBClusterIdentifier: string | undefined;
  SnapshotIdentifier: string | undefined;
  Engine: string | undefined;
  EngineVersion?: string;
  Port?: number;
  DBSubnetGroupName?: string;
  DatabaseName?: string;
  OptionGroupName?: string;
  VpcSecurityGroupIds?: string[];
  Tags?: Tag[];
  KmsKeyId?: string;
  EnableIAMDatabaseAuthentication?: boolean;
  BacktrackWindow?: number;
  EnableCloudwatchLogsExports?: string[];
  EngineMode?: string;
  ScalingConfiguration?: ScalingConfiguration;
  DBClusterParameterGroupName?: string;
  DeletionProtection?: boolean;
  CopyTagsToSnapshot?: boolean;
  Domain?: string;
  DomainIAMRoleName?: string;
  DBClusterInstanceClass?: string;
  StorageType?: string;
  Iops?: number;
  PubliclyAccessible?: boolean;
  ServerlessV2ScalingConfiguration?: ServerlessV2ScalingConfiguration;
  NetworkType?: string;
}
export interface RestoreDBClusterFromSnapshotResult {
  DBCluster?: DBCluster;
}
export interface RestoreDBClusterToPointInTimeMessage {
  DBClusterIdentifier: string | undefined;
  RestoreType?: string;
  SourceDBClusterIdentifier: string | undefined;
  RestoreToTime?: Date;
  UseLatestRestorableTime?: boolean;
  Port?: number;
  DBSubnetGroupName?: string;
  OptionGroupName?: string;
  VpcSecurityGroupIds?: string[];
  Tags?: Tag[];
  KmsKeyId?: string;
  EnableIAMDatabaseAuthentication?: boolean;
  BacktrackWindow?: number;
  EnableCloudwatchLogsExports?: string[];
  DBClusterParameterGroupName?: string;
  DeletionProtection?: boolean;
  CopyTagsToSnapshot?: boolean;
  Domain?: string;
  DomainIAMRoleName?: string;
  ScalingConfiguration?: ScalingConfiguration;
  EngineMode?: string;
  DBClusterInstanceClass?: string;
  StorageType?: string;
  PubliclyAccessible?: boolean;
  Iops?: number;
  ServerlessV2ScalingConfiguration?: ServerlessV2ScalingConfiguration;
  NetworkType?: string;
}
export interface RestoreDBClusterToPointInTimeResult {
  DBCluster?: DBCluster;
}
export interface RestoreDBInstanceFromDBSnapshotMessage {
  DBInstanceIdentifier: string | undefined;
  DBSnapshotIdentifier?: string;
  DBInstanceClass?: string;
  Port?: number;
  AvailabilityZone?: string;
  DBSubnetGroupName?: string;
  MultiAZ?: boolean;
  PubliclyAccessible?: boolean;
  AutoMinorVersionUpgrade?: boolean;
  LicenseModel?: string;
  DBName?: string;
  Engine?: string;
  Iops?: number;
  OptionGroupName?: string;
  Tags?: Tag[];
  StorageType?: string;
  TdeCredentialArn?: string;
  TdeCredentialPassword?: string;
  VpcSecurityGroupIds?: string[];
  Domain?: string;
  CopyTagsToSnapshot?: boolean;
  DomainIAMRoleName?: string;
  EnableIAMDatabaseAuthentication?: boolean;
  EnableCloudwatchLogsExports?: string[];
  ProcessorFeatures?: ProcessorFeature[];
  UseDefaultProcessorFeatures?: boolean;
  DBParameterGroupName?: string;
  DeletionProtection?: boolean;
  EnableCustomerOwnedIp?: boolean;
  CustomIamInstanceProfile?: string;
  BackupTarget?: string;
  NetworkType?: string;
  StorageThroughput?: number;
  DBClusterSnapshotIdentifier?: string;
}
export interface RestoreDBInstanceFromDBSnapshotResult {
  DBInstance?: DBInstance;
}
export interface RestoreDBInstanceFromS3Message {
  DBName?: string;
  DBInstanceIdentifier: string | undefined;
  AllocatedStorage?: number;
  DBInstanceClass: string | undefined;
  Engine: string | undefined;
  MasterUsername?: string;
  MasterUserPassword?: string;
  DBSecurityGroups?: string[];
  VpcSecurityGroupIds?: string[];
  AvailabilityZone?: string;
  DBSubnetGroupName?: string;
  PreferredMaintenanceWindow?: string;
  DBParameterGroupName?: string;
  BackupRetentionPeriod?: number;
  PreferredBackupWindow?: string;
  Port?: number;
  MultiAZ?: boolean;
  EngineVersion?: string;
  AutoMinorVersionUpgrade?: boolean;
  LicenseModel?: string;
  Iops?: number;
  OptionGroupName?: string;
  PubliclyAccessible?: boolean;
  Tags?: Tag[];
  StorageType?: string;
  StorageEncrypted?: boolean;
  KmsKeyId?: string;
  CopyTagsToSnapshot?: boolean;
  MonitoringInterval?: number;
  MonitoringRoleArn?: string;
  EnableIAMDatabaseAuthentication?: boolean;
  SourceEngine: string | undefined;
  SourceEngineVersion: string | undefined;
  S3BucketName: string | undefined;
  S3Prefix?: string;
  S3IngestionRoleArn: string | undefined;
  EnablePerformanceInsights?: boolean;
  PerformanceInsightsKMSKeyId?: string;
  PerformanceInsightsRetentionPeriod?: number;
  EnableCloudwatchLogsExports?: string[];
  ProcessorFeatures?: ProcessorFeature[];
  UseDefaultProcessorFeatures?: boolean;
  DeletionProtection?: boolean;
  MaxAllocatedStorage?: number;
  NetworkType?: string;
  StorageThroughput?: number;
  ManageMasterUserPassword?: boolean;
  MasterUserSecretKmsKeyId?: string;
}
export interface RestoreDBInstanceFromS3Result {
  DBInstance?: DBInstance;
}
export declare class PointInTimeRestoreNotEnabledFault extends __BaseException {
  readonly name: "PointInTimeRestoreNotEnabledFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      PointInTimeRestoreNotEnabledFault,
      __BaseException
    >
  );
}
export interface RestoreDBInstanceToPointInTimeMessage {
  SourceDBInstanceIdentifier?: string;
  TargetDBInstanceIdentifier: string | undefined;
  RestoreTime?: Date;
  UseLatestRestorableTime?: boolean;
  DBInstanceClass?: string;
  Port?: number;
  AvailabilityZone?: string;
  DBSubnetGroupName?: string;
  MultiAZ?: boolean;
  PubliclyAccessible?: boolean;
  AutoMinorVersionUpgrade?: boolean;
  LicenseModel?: string;
  DBName?: string;
  Engine?: string;
  Iops?: number;
  OptionGroupName?: string;
  CopyTagsToSnapshot?: boolean;
  Tags?: Tag[];
  StorageType?: string;
  TdeCredentialArn?: string;
  TdeCredentialPassword?: string;
  VpcSecurityGroupIds?: string[];
  Domain?: string;
  DomainIAMRoleName?: string;
  EnableIAMDatabaseAuthentication?: boolean;
  EnableCloudwatchLogsExports?: string[];
  ProcessorFeatures?: ProcessorFeature[];
  UseDefaultProcessorFeatures?: boolean;
  DBParameterGroupName?: string;
  DeletionProtection?: boolean;
  SourceDbiResourceId?: string;
  MaxAllocatedStorage?: number;
  SourceDBInstanceAutomatedBackupsArn?: string;
  EnableCustomerOwnedIp?: boolean;
  CustomIamInstanceProfile?: string;
  BackupTarget?: string;
  NetworkType?: string;
  StorageThroughput?: number;
}
export interface RestoreDBInstanceToPointInTimeResult {
  DBInstance?: DBInstance;
}
export interface RevokeDBSecurityGroupIngressMessage {
  DBSecurityGroupName: string | undefined;
  CIDRIP?: string;
  EC2SecurityGroupName?: string;
  EC2SecurityGroupId?: string;
  EC2SecurityGroupOwnerId?: string;
}
export interface RevokeDBSecurityGroupIngressResult {
  DBSecurityGroup?: DBSecurityGroup;
}
export interface StartActivityStreamRequest {
  ResourceArn: string | undefined;
  Mode: ActivityStreamMode | string | undefined;
  KmsKeyId: string | undefined;
  ApplyImmediately?: boolean;
  EngineNativeAuditFieldsIncluded?: boolean;
}
export interface StartActivityStreamResponse {
  KmsKeyId?: string;
  KinesisStreamName?: string;
  Status?: ActivityStreamStatus | string;
  Mode?: ActivityStreamMode | string;
  ApplyImmediately?: boolean;
  EngineNativeAuditFieldsIncluded?: boolean;
}
export interface StartDBClusterMessage {
  DBClusterIdentifier: string | undefined;
}
export interface StartDBClusterResult {
  DBCluster?: DBCluster;
}
export interface StartDBInstanceMessage {
  DBInstanceIdentifier: string | undefined;
}
export interface StartDBInstanceResult {
  DBInstance?: DBInstance;
}
export interface StartDBInstanceAutomatedBackupsReplicationMessage {
  SourceDBInstanceArn: string | undefined;
  BackupRetentionPeriod?: number;
  KmsKeyId?: string;
  PreSignedUrl?: string;
}
export interface StartDBInstanceAutomatedBackupsReplicationResult {
  DBInstanceAutomatedBackup?: DBInstanceAutomatedBackup;
}
export declare class ExportTaskAlreadyExistsFault extends __BaseException {
  readonly name: "ExportTaskAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ExportTaskAlreadyExistsFault, __BaseException>
  );
}
export declare class IamRoleMissingPermissionsFault extends __BaseException {
  readonly name: "IamRoleMissingPermissionsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<IamRoleMissingPermissionsFault, __BaseException>
  );
}
export declare class IamRoleNotFoundFault extends __BaseException {
  readonly name: "IamRoleNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<IamRoleNotFoundFault, __BaseException>
  );
}
export declare class InvalidExportOnlyFault extends __BaseException {
  readonly name: "InvalidExportOnlyFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidExportOnlyFault, __BaseException>
  );
}
export declare class InvalidExportSourceStateFault extends __BaseException {
  readonly name: "InvalidExportSourceStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidExportSourceStateFault, __BaseException>
  );
}
export interface StartExportTaskMessage {
  ExportTaskIdentifier: string | undefined;
  SourceArn: string | undefined;
  S3BucketName: string | undefined;
  IamRoleArn: string | undefined;
  KmsKeyId: string | undefined;
  S3Prefix?: string;
  ExportOnly?: string[];
}
export interface StopActivityStreamRequest {
  ResourceArn: string | undefined;
  ApplyImmediately?: boolean;
}
export interface StopActivityStreamResponse {
  KmsKeyId?: string;
  KinesisStreamName?: string;
  Status?: ActivityStreamStatus | string;
}
export interface StopDBClusterMessage {
  DBClusterIdentifier: string | undefined;
}
export interface StopDBClusterResult {
  DBCluster?: DBCluster;
}
export interface StopDBInstanceMessage {
  DBInstanceIdentifier: string | undefined;
  DBSnapshotIdentifier?: string;
}
export interface StopDBInstanceResult {
  DBInstance?: DBInstance;
}
export interface StopDBInstanceAutomatedBackupsReplicationMessage {
  SourceDBInstanceArn: string | undefined;
}
export interface StopDBInstanceAutomatedBackupsReplicationResult {
  DBInstanceAutomatedBackup?: DBInstanceAutomatedBackup;
}
export interface SwitchoverBlueGreenDeploymentRequest {
  BlueGreenDeploymentIdentifier: string | undefined;
  SwitchoverTimeout?: number;
}
export interface SwitchoverBlueGreenDeploymentResponse {
  BlueGreenDeployment?: BlueGreenDeployment;
}
export interface SwitchoverReadReplicaMessage {
  DBInstanceIdentifier: string | undefined;
}
export interface SwitchoverReadReplicaResult {
  DBInstance?: DBInstance;
}
export declare const DescribeDBProxyEndpointsRequestFilterSensitiveLog: (
  obj: DescribeDBProxyEndpointsRequest
) => any;
export declare const DescribeDBProxyEndpointsResponseFilterSensitiveLog: (
  obj: DescribeDBProxyEndpointsResponse
) => any;
export declare const DescribeDBProxyTargetGroupsRequestFilterSensitiveLog: (
  obj: DescribeDBProxyTargetGroupsRequest
) => any;
export declare const ConnectionPoolConfigurationInfoFilterSensitiveLog: (
  obj: ConnectionPoolConfigurationInfo
) => any;
export declare const DBProxyTargetGroupFilterSensitiveLog: (
  obj: DBProxyTargetGroup
) => any;
export declare const DescribeDBProxyTargetGroupsResponseFilterSensitiveLog: (
  obj: DescribeDBProxyTargetGroupsResponse
) => any;
export declare const DescribeDBProxyTargetsRequestFilterSensitiveLog: (
  obj: DescribeDBProxyTargetsRequest
) => any;
export declare const TargetHealthFilterSensitiveLog: (obj: TargetHealth) => any;
export declare const DBProxyTargetFilterSensitiveLog: (
  obj: DBProxyTarget
) => any;
export declare const DescribeDBProxyTargetsResponseFilterSensitiveLog: (
  obj: DescribeDBProxyTargetsResponse
) => any;
export declare const DBSecurityGroupMessageFilterSensitiveLog: (
  obj: DBSecurityGroupMessage
) => any;
export declare const DescribeDBSecurityGroupsMessageFilterSensitiveLog: (
  obj: DescribeDBSecurityGroupsMessage
) => any;
export declare const DescribeDBSnapshotAttributesMessageFilterSensitiveLog: (
  obj: DescribeDBSnapshotAttributesMessage
) => any;
export declare const DBSnapshotAttributeFilterSensitiveLog: (
  obj: DBSnapshotAttribute
) => any;
export declare const DBSnapshotAttributesResultFilterSensitiveLog: (
  obj: DBSnapshotAttributesResult
) => any;
export declare const DescribeDBSnapshotAttributesResultFilterSensitiveLog: (
  obj: DescribeDBSnapshotAttributesResult
) => any;
export declare const DBSnapshotMessageFilterSensitiveLog: (
  obj: DBSnapshotMessage
) => any;
export declare const DescribeDBSnapshotsMessageFilterSensitiveLog: (
  obj: DescribeDBSnapshotsMessage
) => any;
export declare const DBSubnetGroupMessageFilterSensitiveLog: (
  obj: DBSubnetGroupMessage
) => any;
export declare const DescribeDBSubnetGroupsMessageFilterSensitiveLog: (
  obj: DescribeDBSubnetGroupsMessage
) => any;
export declare const DescribeEngineDefaultClusterParametersMessageFilterSensitiveLog: (
  obj: DescribeEngineDefaultClusterParametersMessage
) => any;
export declare const EngineDefaultsFilterSensitiveLog: (
  obj: EngineDefaults
) => any;
export declare const DescribeEngineDefaultClusterParametersResultFilterSensitiveLog: (
  obj: DescribeEngineDefaultClusterParametersResult
) => any;
export declare const DescribeEngineDefaultParametersMessageFilterSensitiveLog: (
  obj: DescribeEngineDefaultParametersMessage
) => any;
export declare const DescribeEngineDefaultParametersResultFilterSensitiveLog: (
  obj: DescribeEngineDefaultParametersResult
) => any;
export declare const DescribeEventCategoriesMessageFilterSensitiveLog: (
  obj: DescribeEventCategoriesMessage
) => any;
export declare const EventCategoriesMapFilterSensitiveLog: (
  obj: EventCategoriesMap
) => any;
export declare const EventCategoriesMessageFilterSensitiveLog: (
  obj: EventCategoriesMessage
) => any;
export declare const DescribeEventsMessageFilterSensitiveLog: (
  obj: DescribeEventsMessage
) => any;
export declare const EventFilterSensitiveLog: (obj: Event) => any;
export declare const EventsMessageFilterSensitiveLog: (
  obj: EventsMessage
) => any;
export declare const DescribeEventSubscriptionsMessageFilterSensitiveLog: (
  obj: DescribeEventSubscriptionsMessage
) => any;
export declare const EventSubscriptionsMessageFilterSensitiveLog: (
  obj: EventSubscriptionsMessage
) => any;
export declare const DescribeExportTasksMessageFilterSensitiveLog: (
  obj: DescribeExportTasksMessage
) => any;
export declare const ExportTasksMessageFilterSensitiveLog: (
  obj: ExportTasksMessage
) => any;
export declare const DescribeGlobalClustersMessageFilterSensitiveLog: (
  obj: DescribeGlobalClustersMessage
) => any;
export declare const GlobalClustersMessageFilterSensitiveLog: (
  obj: GlobalClustersMessage
) => any;
export declare const DescribeOptionGroupOptionsMessageFilterSensitiveLog: (
  obj: DescribeOptionGroupOptionsMessage
) => any;
export declare const MinimumEngineVersionPerAllowedValueFilterSensitiveLog: (
  obj: MinimumEngineVersionPerAllowedValue
) => any;
export declare const OptionGroupOptionSettingFilterSensitiveLog: (
  obj: OptionGroupOptionSetting
) => any;
export declare const OptionVersionFilterSensitiveLog: (
  obj: OptionVersion
) => any;
export declare const OptionGroupOptionFilterSensitiveLog: (
  obj: OptionGroupOption
) => any;
export declare const OptionGroupOptionsMessageFilterSensitiveLog: (
  obj: OptionGroupOptionsMessage
) => any;
export declare const DescribeOptionGroupsMessageFilterSensitiveLog: (
  obj: DescribeOptionGroupsMessage
) => any;
export declare const OptionGroupsFilterSensitiveLog: (obj: OptionGroups) => any;
export declare const DescribeOrderableDBInstanceOptionsMessageFilterSensitiveLog: (
  obj: DescribeOrderableDBInstanceOptionsMessage
) => any;
export declare const AvailableProcessorFeatureFilterSensitiveLog: (
  obj: AvailableProcessorFeature
) => any;
export declare const OrderableDBInstanceOptionFilterSensitiveLog: (
  obj: OrderableDBInstanceOption
) => any;
export declare const OrderableDBInstanceOptionsMessageFilterSensitiveLog: (
  obj: OrderableDBInstanceOptionsMessage
) => any;
export declare const DescribePendingMaintenanceActionsMessageFilterSensitiveLog: (
  obj: DescribePendingMaintenanceActionsMessage
) => any;
export declare const PendingMaintenanceActionsMessageFilterSensitiveLog: (
  obj: PendingMaintenanceActionsMessage
) => any;
export declare const DescribeReservedDBInstancesMessageFilterSensitiveLog: (
  obj: DescribeReservedDBInstancesMessage
) => any;
export declare const RecurringChargeFilterSensitiveLog: (
  obj: RecurringCharge
) => any;
export declare const ReservedDBInstanceFilterSensitiveLog: (
  obj: ReservedDBInstance
) => any;
export declare const ReservedDBInstanceMessageFilterSensitiveLog: (
  obj: ReservedDBInstanceMessage
) => any;
export declare const DescribeReservedDBInstancesOfferingsMessageFilterSensitiveLog: (
  obj: DescribeReservedDBInstancesOfferingsMessage
) => any;
export declare const ReservedDBInstancesOfferingFilterSensitiveLog: (
  obj: ReservedDBInstancesOffering
) => any;
export declare const ReservedDBInstancesOfferingMessageFilterSensitiveLog: (
  obj: ReservedDBInstancesOfferingMessage
) => any;
export declare const DescribeSourceRegionsMessageFilterSensitiveLog: (
  obj: DescribeSourceRegionsMessage
) => any;
export declare const SourceRegionFilterSensitiveLog: (obj: SourceRegion) => any;
export declare const SourceRegionMessageFilterSensitiveLog: (
  obj: SourceRegionMessage
) => any;
export declare const DescribeValidDBInstanceModificationsMessageFilterSensitiveLog: (
  obj: DescribeValidDBInstanceModificationsMessage
) => any;
export declare const DoubleRangeFilterSensitiveLog: (obj: DoubleRange) => any;
export declare const RangeFilterSensitiveLog: (obj: Range) => any;
export declare const ValidStorageOptionsFilterSensitiveLog: (
  obj: ValidStorageOptions
) => any;
export declare const ValidDBInstanceModificationsMessageFilterSensitiveLog: (
  obj: ValidDBInstanceModificationsMessage
) => any;
export declare const DescribeValidDBInstanceModificationsResultFilterSensitiveLog: (
  obj: DescribeValidDBInstanceModificationsResult
) => any;
export declare const DownloadDBLogFilePortionDetailsFilterSensitiveLog: (
  obj: DownloadDBLogFilePortionDetails
) => any;
export declare const DownloadDBLogFilePortionMessageFilterSensitiveLog: (
  obj: DownloadDBLogFilePortionMessage
) => any;
export declare const FailoverDBClusterMessageFilterSensitiveLog: (
  obj: FailoverDBClusterMessage
) => any;
export declare const FailoverDBClusterResultFilterSensitiveLog: (
  obj: FailoverDBClusterResult
) => any;
export declare const FailoverGlobalClusterMessageFilterSensitiveLog: (
  obj: FailoverGlobalClusterMessage
) => any;
export declare const FailoverGlobalClusterResultFilterSensitiveLog: (
  obj: FailoverGlobalClusterResult
) => any;
export declare const ListTagsForResourceMessageFilterSensitiveLog: (
  obj: ListTagsForResourceMessage
) => any;
export declare const TagListMessageFilterSensitiveLog: (
  obj: TagListMessage
) => any;
export declare const ModifyActivityStreamRequestFilterSensitiveLog: (
  obj: ModifyActivityStreamRequest
) => any;
export declare const ModifyActivityStreamResponseFilterSensitiveLog: (
  obj: ModifyActivityStreamResponse
) => any;
export declare const ModifyCertificatesMessageFilterSensitiveLog: (
  obj: ModifyCertificatesMessage
) => any;
export declare const ModifyCertificatesResultFilterSensitiveLog: (
  obj: ModifyCertificatesResult
) => any;
export declare const DBClusterCapacityInfoFilterSensitiveLog: (
  obj: DBClusterCapacityInfo
) => any;
export declare const ModifyCurrentDBClusterCapacityMessageFilterSensitiveLog: (
  obj: ModifyCurrentDBClusterCapacityMessage
) => any;
export declare const ModifyCustomDBEngineVersionMessageFilterSensitiveLog: (
  obj: ModifyCustomDBEngineVersionMessage
) => any;
export declare const CloudwatchLogsExportConfigurationFilterSensitiveLog: (
  obj: CloudwatchLogsExportConfiguration
) => any;
export declare const ModifyDBClusterMessageFilterSensitiveLog: (
  obj: ModifyDBClusterMessage
) => any;
export declare const ModifyDBClusterResultFilterSensitiveLog: (
  obj: ModifyDBClusterResult
) => any;
export declare const ModifyDBClusterEndpointMessageFilterSensitiveLog: (
  obj: ModifyDBClusterEndpointMessage
) => any;
export declare const DBClusterParameterGroupNameMessageFilterSensitiveLog: (
  obj: DBClusterParameterGroupNameMessage
) => any;
export declare const ModifyDBClusterParameterGroupMessageFilterSensitiveLog: (
  obj: ModifyDBClusterParameterGroupMessage
) => any;
export declare const ModifyDBClusterSnapshotAttributeMessageFilterSensitiveLog: (
  obj: ModifyDBClusterSnapshotAttributeMessage
) => any;
export declare const ModifyDBClusterSnapshotAttributeResultFilterSensitiveLog: (
  obj: ModifyDBClusterSnapshotAttributeResult
) => any;
export declare const ModifyDBInstanceMessageFilterSensitiveLog: (
  obj: ModifyDBInstanceMessage
) => any;
export declare const ModifyDBInstanceResultFilterSensitiveLog: (
  obj: ModifyDBInstanceResult
) => any;
export declare const DBParameterGroupNameMessageFilterSensitiveLog: (
  obj: DBParameterGroupNameMessage
) => any;
export declare const ModifyDBParameterGroupMessageFilterSensitiveLog: (
  obj: ModifyDBParameterGroupMessage
) => any;
export declare const ModifyDBProxyRequestFilterSensitiveLog: (
  obj: ModifyDBProxyRequest
) => any;
export declare const ModifyDBProxyResponseFilterSensitiveLog: (
  obj: ModifyDBProxyResponse
) => any;
export declare const ModifyDBProxyEndpointRequestFilterSensitiveLog: (
  obj: ModifyDBProxyEndpointRequest
) => any;
export declare const ModifyDBProxyEndpointResponseFilterSensitiveLog: (
  obj: ModifyDBProxyEndpointResponse
) => any;
export declare const ConnectionPoolConfigurationFilterSensitiveLog: (
  obj: ConnectionPoolConfiguration
) => any;
export declare const ModifyDBProxyTargetGroupRequestFilterSensitiveLog: (
  obj: ModifyDBProxyTargetGroupRequest
) => any;
export declare const ModifyDBProxyTargetGroupResponseFilterSensitiveLog: (
  obj: ModifyDBProxyTargetGroupResponse
) => any;
export declare const ModifyDBSnapshotMessageFilterSensitiveLog: (
  obj: ModifyDBSnapshotMessage
) => any;
export declare const ModifyDBSnapshotResultFilterSensitiveLog: (
  obj: ModifyDBSnapshotResult
) => any;
export declare const ModifyDBSnapshotAttributeMessageFilterSensitiveLog: (
  obj: ModifyDBSnapshotAttributeMessage
) => any;
export declare const ModifyDBSnapshotAttributeResultFilterSensitiveLog: (
  obj: ModifyDBSnapshotAttributeResult
) => any;
export declare const ModifyDBSubnetGroupMessageFilterSensitiveLog: (
  obj: ModifyDBSubnetGroupMessage
) => any;
export declare const ModifyDBSubnetGroupResultFilterSensitiveLog: (
  obj: ModifyDBSubnetGroupResult
) => any;
export declare const ModifyEventSubscriptionMessageFilterSensitiveLog: (
  obj: ModifyEventSubscriptionMessage
) => any;
export declare const ModifyEventSubscriptionResultFilterSensitiveLog: (
  obj: ModifyEventSubscriptionResult
) => any;
export declare const ModifyGlobalClusterMessageFilterSensitiveLog: (
  obj: ModifyGlobalClusterMessage
) => any;
export declare const ModifyGlobalClusterResultFilterSensitiveLog: (
  obj: ModifyGlobalClusterResult
) => any;
export declare const OptionConfigurationFilterSensitiveLog: (
  obj: OptionConfiguration
) => any;
export declare const ModifyOptionGroupMessageFilterSensitiveLog: (
  obj: ModifyOptionGroupMessage
) => any;
export declare const ModifyOptionGroupResultFilterSensitiveLog: (
  obj: ModifyOptionGroupResult
) => any;
export declare const PromoteReadReplicaMessageFilterSensitiveLog: (
  obj: PromoteReadReplicaMessage
) => any;
export declare const PromoteReadReplicaResultFilterSensitiveLog: (
  obj: PromoteReadReplicaResult
) => any;
export declare const PromoteReadReplicaDBClusterMessageFilterSensitiveLog: (
  obj: PromoteReadReplicaDBClusterMessage
) => any;
export declare const PromoteReadReplicaDBClusterResultFilterSensitiveLog: (
  obj: PromoteReadReplicaDBClusterResult
) => any;
export declare const PurchaseReservedDBInstancesOfferingMessageFilterSensitiveLog: (
  obj: PurchaseReservedDBInstancesOfferingMessage
) => any;
export declare const PurchaseReservedDBInstancesOfferingResultFilterSensitiveLog: (
  obj: PurchaseReservedDBInstancesOfferingResult
) => any;
export declare const RebootDBClusterMessageFilterSensitiveLog: (
  obj: RebootDBClusterMessage
) => any;
export declare const RebootDBClusterResultFilterSensitiveLog: (
  obj: RebootDBClusterResult
) => any;
export declare const RebootDBInstanceMessageFilterSensitiveLog: (
  obj: RebootDBInstanceMessage
) => any;
export declare const RebootDBInstanceResultFilterSensitiveLog: (
  obj: RebootDBInstanceResult
) => any;
export declare const RegisterDBProxyTargetsRequestFilterSensitiveLog: (
  obj: RegisterDBProxyTargetsRequest
) => any;
export declare const RegisterDBProxyTargetsResponseFilterSensitiveLog: (
  obj: RegisterDBProxyTargetsResponse
) => any;
export declare const RemoveFromGlobalClusterMessageFilterSensitiveLog: (
  obj: RemoveFromGlobalClusterMessage
) => any;
export declare const RemoveFromGlobalClusterResultFilterSensitiveLog: (
  obj: RemoveFromGlobalClusterResult
) => any;
export declare const RemoveRoleFromDBClusterMessageFilterSensitiveLog: (
  obj: RemoveRoleFromDBClusterMessage
) => any;
export declare const RemoveRoleFromDBInstanceMessageFilterSensitiveLog: (
  obj: RemoveRoleFromDBInstanceMessage
) => any;
export declare const RemoveSourceIdentifierFromSubscriptionMessageFilterSensitiveLog: (
  obj: RemoveSourceIdentifierFromSubscriptionMessage
) => any;
export declare const RemoveSourceIdentifierFromSubscriptionResultFilterSensitiveLog: (
  obj: RemoveSourceIdentifierFromSubscriptionResult
) => any;
export declare const RemoveTagsFromResourceMessageFilterSensitiveLog: (
  obj: RemoveTagsFromResourceMessage
) => any;
export declare const ResetDBClusterParameterGroupMessageFilterSensitiveLog: (
  obj: ResetDBClusterParameterGroupMessage
) => any;
export declare const ResetDBParameterGroupMessageFilterSensitiveLog: (
  obj: ResetDBParameterGroupMessage
) => any;
export declare const RestoreDBClusterFromS3MessageFilterSensitiveLog: (
  obj: RestoreDBClusterFromS3Message
) => any;
export declare const RestoreDBClusterFromS3ResultFilterSensitiveLog: (
  obj: RestoreDBClusterFromS3Result
) => any;
export declare const RestoreDBClusterFromSnapshotMessageFilterSensitiveLog: (
  obj: RestoreDBClusterFromSnapshotMessage
) => any;
export declare const RestoreDBClusterFromSnapshotResultFilterSensitiveLog: (
  obj: RestoreDBClusterFromSnapshotResult
) => any;
export declare const RestoreDBClusterToPointInTimeMessageFilterSensitiveLog: (
  obj: RestoreDBClusterToPointInTimeMessage
) => any;
export declare const RestoreDBClusterToPointInTimeResultFilterSensitiveLog: (
  obj: RestoreDBClusterToPointInTimeResult
) => any;
export declare const RestoreDBInstanceFromDBSnapshotMessageFilterSensitiveLog: (
  obj: RestoreDBInstanceFromDBSnapshotMessage
) => any;
export declare const RestoreDBInstanceFromDBSnapshotResultFilterSensitiveLog: (
  obj: RestoreDBInstanceFromDBSnapshotResult
) => any;
export declare const RestoreDBInstanceFromS3MessageFilterSensitiveLog: (
  obj: RestoreDBInstanceFromS3Message
) => any;
export declare const RestoreDBInstanceFromS3ResultFilterSensitiveLog: (
  obj: RestoreDBInstanceFromS3Result
) => any;
export declare const RestoreDBInstanceToPointInTimeMessageFilterSensitiveLog: (
  obj: RestoreDBInstanceToPointInTimeMessage
) => any;
export declare const RestoreDBInstanceToPointInTimeResultFilterSensitiveLog: (
  obj: RestoreDBInstanceToPointInTimeResult
) => any;
export declare const RevokeDBSecurityGroupIngressMessageFilterSensitiveLog: (
  obj: RevokeDBSecurityGroupIngressMessage
) => any;
export declare const RevokeDBSecurityGroupIngressResultFilterSensitiveLog: (
  obj: RevokeDBSecurityGroupIngressResult
) => any;
export declare const StartActivityStreamRequestFilterSensitiveLog: (
  obj: StartActivityStreamRequest
) => any;
export declare const StartActivityStreamResponseFilterSensitiveLog: (
  obj: StartActivityStreamResponse
) => any;
export declare const StartDBClusterMessageFilterSensitiveLog: (
  obj: StartDBClusterMessage
) => any;
export declare const StartDBClusterResultFilterSensitiveLog: (
  obj: StartDBClusterResult
) => any;
export declare const StartDBInstanceMessageFilterSensitiveLog: (
  obj: StartDBInstanceMessage
) => any;
export declare const StartDBInstanceResultFilterSensitiveLog: (
  obj: StartDBInstanceResult
) => any;
export declare const StartDBInstanceAutomatedBackupsReplicationMessageFilterSensitiveLog: (
  obj: StartDBInstanceAutomatedBackupsReplicationMessage
) => any;
export declare const StartDBInstanceAutomatedBackupsReplicationResultFilterSensitiveLog: (
  obj: StartDBInstanceAutomatedBackupsReplicationResult
) => any;
export declare const StartExportTaskMessageFilterSensitiveLog: (
  obj: StartExportTaskMessage
) => any;
export declare const StopActivityStreamRequestFilterSensitiveLog: (
  obj: StopActivityStreamRequest
) => any;
export declare const StopActivityStreamResponseFilterSensitiveLog: (
  obj: StopActivityStreamResponse
) => any;
export declare const StopDBClusterMessageFilterSensitiveLog: (
  obj: StopDBClusterMessage
) => any;
export declare const StopDBClusterResultFilterSensitiveLog: (
  obj: StopDBClusterResult
) => any;
export declare const StopDBInstanceMessageFilterSensitiveLog: (
  obj: StopDBInstanceMessage
) => any;
export declare const StopDBInstanceResultFilterSensitiveLog: (
  obj: StopDBInstanceResult
) => any;
export declare const StopDBInstanceAutomatedBackupsReplicationMessageFilterSensitiveLog: (
  obj: StopDBInstanceAutomatedBackupsReplicationMessage
) => any;
export declare const StopDBInstanceAutomatedBackupsReplicationResultFilterSensitiveLog: (
  obj: StopDBInstanceAutomatedBackupsReplicationResult
) => any;
export declare const SwitchoverBlueGreenDeploymentRequestFilterSensitiveLog: (
  obj: SwitchoverBlueGreenDeploymentRequest
) => any;
export declare const SwitchoverBlueGreenDeploymentResponseFilterSensitiveLog: (
  obj: SwitchoverBlueGreenDeploymentResponse
) => any;
export declare const SwitchoverReadReplicaMessageFilterSensitiveLog: (
  obj: SwitchoverReadReplicaMessage
) => any;
export declare const SwitchoverReadReplicaResultFilterSensitiveLog: (
  obj: SwitchoverReadReplicaResult
) => any;
